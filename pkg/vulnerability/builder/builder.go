package builder

import (
	"encoding/json"
	"os"

	"github.com/pkg/errors"
	"golang.org/x/exp/maps"

	"github.com/vulsio/windows-vuln-feed/pkg/vulnerability/model"
)

// Build ...
func Build(paths []string) ([]model.Vulnerability, error) {
	cveMap := map[string]model.Vulnerability{}
	for _, path := range paths {
		f, err := os.Open(path)
		if err != nil {
			if os.IsNotExist(err) {
				continue
			}
			return nil, errors.Wrapf(err, "failed to open %s", path)
		}
		defer f.Close()

		cves := []model.Vulnerability{}
		if err := json.NewDecoder(f).Decode(&cves); err != nil {
			return nil, errors.Wrapf(err, "failed to decode %s", path)
		}

		for _, cve := range cves {
			cveMap[cve.CVEID] = cve
		}
	}
	return maps.Values(cveMap), nil
}
